name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: chatterfix-ui

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and push Docker image
        run: |
          IMAGE=us-central1-docker.pkg.dev/chatterfix-ui/cloud-run-source-deploy/agent-core-ui
          docker build -t $IMAGE -f deploy/Dockerfile . 
          docker push $IMAGE

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy agent-core-ui \
            --image=us-central1-docker.pkg.dev/chatterfix-ui/cloud-run-source-deploy/agent-core-ui \
            --platform=managed \
            --region=us-central1 \
            --allow-unauthenticated \
            --port 8080

      # Temporary step to confirm billing setup during Cloud Run deployment
      - name: Confirm billing setup
        run: |
          echo "âœ… Billing setup trigger initiated. Ensure billing is active for project chatterfix-ui."

      - name: Ensure jq is installed
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
        shell: bash

      - name: Verify Service Account Credentials JSON
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | jq empty
        shell: bash

      - name: Run Simple Chat API Test
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          curl https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d '{
              "model": "gpt-3.5-turbo",
              "messages": [{"role": "user", "content": "Hello!"}],
              "max_tokens": 5
            }'

      - name: Run Google Chat API Test
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $GOOGLE_API_KEY" \
            -d '{
              "text": "Hello from GitHub Actions!"
            }' \
            "https://chat.googleapis.com/v1/spaces/SPACE_ID/messages?key=$GOOGLE_API_KEY"

      - name: Check JSON validity of GCP Service Account Key
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | jq type
        shell: bash
