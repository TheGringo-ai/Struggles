name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest

    env:
      REGION: us-central1
      PROJECT_ID: chatterfix-ui
      SERVICE_NAME: agent-core-ui
      IMAGE: us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.SERVICE_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: chatterfix-ui

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker $REGION-docker.pkg.dev

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE -f deploy/Dockerfile . 
          docker push $IMAGE

      - name: Pre-deploy health check
        continue-on-error: true
        run: |
          curl -f https://${{ env.SERVICE_NAME }}-${{ env.PROJECT_ID }}.run.app || echo "⚠️ Previous version unreachable"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy --service=$SERVICE_NAME \
            --image=$IMAGE \
            --platform=managed \
            --region=$REGION \
            --allow-unauthenticated \
            --port 8080

      # Temporary step to confirm billing setup during Cloud Run deployment
      - name: Confirm billing setup
        run: |
          echo "✅ Billing setup trigger initiated. Ensure billing is active for project chatterfix-ui."

      - name: Ensure jq is installed
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
        shell: bash

      - name: Verify Service Account Credentials JSON
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | jq empty
        shell: bash

      - name: Run Simple Chat API Test
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          curl https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d '{
              "model": "gpt-3.5-turbo",
              "messages": [{"role": "user", "content": "Hello!"}],
              "max_tokens": 5
            }'

      - name: Run Google Chat API Test
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $GOOGLE_API_KEY" \
            -d '{
              "text": "Hello from GitHub Actions!"
            }' \
            "https://chat.googleapis.com/v1/spaces/SPACE_ID/messages?key=$GOOGLE_API_KEY"

      - name: Check JSON validity of GCP Service Account Key
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | jq type
        shell: bash

      - name: Send success notification
        if: success()
        run: |
          echo "✅ Deployment to $SERVICE_NAME successful."

      - name: Send failure notification
        if: failure()
        run: |
          echo "❌ Deployment to $SERVICE_NAME failed."
